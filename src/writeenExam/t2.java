package writeenExam;

public class t2 {
    /*
    3月30日百度笔试
    牛牛有一个硬币，有p%的概率为正。现在要把一个数组 a[1]…a[2*n]拆分成n个二元组。
    对于这n个二元组，抛硬币，如果是正面就选择这两个数里最大的数字，反之则选最小的数字。
    求最终和的结果的最大值的期望

    输入描述： 1<=n<=1e6,0<=p<=100, 0<=a[i]<=1e11
    输出描述：输出最大期望，如果最大期望恰好是整数，则直接输出这个整数，否则，按百分数的形式输出这个百分数

    3 0 [1,3,3,2,2,3]  输出6，（1，3）（2，3）（3，3）
     */

    /*
    思路：当p>=50时，对数组排序，直接输出后半部分的和*p+前半部分的和*(1-p)
    当p<50时，排序，[1,2,2,3,3,3],直接两两配对，输出，
    存在的问题是数组越界，因为元素超过了int和long的范围，
    看网上的思路一致，就是每次记得及时除以100，并记录余数
     */
    public static void main(String[] args) {

    }
    public static int t2(int p ,int[] nums){
        return 0;
    }
}
